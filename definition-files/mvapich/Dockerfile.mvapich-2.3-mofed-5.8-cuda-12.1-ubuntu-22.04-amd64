FROM docker.io/mkandes/mofed:5.8-cuda-12.1-ubuntu-22.04-amd64

# Add OCI annotations
LABEL org.opencontainers.image.ref.name='docker.io/mkandes/mvapich:2.3-mofed-5.8-cuda-12.1-ubuntu-22.04-amd64'

LABEL org.opencontainers.image.base.name='docker.io/mkandes/mofed:5.8-cuda-12.1-ubuntu-22.04-amd64'
LABEL org.opencontainers.image.base.digest='sha256:f24c16bc669605dcd5e58ce6e2d532308907070fcc847a1d0fb6a3f7ad5e7234'

LABEL org.opencontainers.image.title='mvapich'
LABEL org.opencontainers.image.description='MVAPICH2 is an open source implementation of Message Passing Interface (MPI)'
LABEL org.opencontainers.image.url='https://mvapich.cse.ohio-state.edu'
LABEL org.opencontainers.image.documentation='https://mvapich.cse.ohio-state.edu/static/media/mvapich/mvapich2-userguide.html'
LABEL org.opencontainers.image.source='https://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich2-2.3.7-1.tar.gz'
LABEL org.opencontainers.image.vendor='Network-Based Computing Laboratory (NBCL), Ohio State Univeristy'
LABEL org.opencontainers.image.licenses='https://mvapich.cse.ohio-state.edu/static/media/mvapich/LICENSE-MV2.TXT'
LABEL org.opencontainers.image.version='2.3.7-1'
LABEL org.opencontainers.image.revision='fdd971cf36d6476d007b5d63d19414546ca8a2937b66886f24a1d9ca154634e4'

LABEL org.opencontainers.image.authors='Marty Kandes (mkandes@sdsc.edu)'

# Set the default shell for the image
SHELL ["/bin/bash", "-c"]

# Set operating system mirror URL
ENV MIRRORURL='http://us.archive.ubuntu.com/ubuntu'

# Set operating system version
ENV OSVERSION='jammy'

# Set system locale
ENV LC_ALL=C

# Set debian frontend interface
ENV DEBIAN_FRONTEND='noninteractive'

# Set MVAPICH version and install path
ENV MV2_MAJOR='2'
ENV MV2_MINOR='3'
ENV MV2_REVISION='7-1'
ENV MV2_VERSION="${MV2_MAJOR}.${MV2_MINOR}.${MV2_REVISION}"
ENV MV2_ROOT_DIR='/opt/mvapich'
ENV MV2_INSTALL_DIR="${MV2_ROOT_DIR}/${MV2_VERSION}"

# Set paths to MVAPICH binaries and libraries
ENV PATH="${MV2_INSTALL_DIR}/bin:${PATH}"
ENV LD_LIBRARY_PATH="${MV2_INSTALL_DIR}/lib:${LD_LIBRARY_PATH}"

# Upgrade all software packages to their latest versions
RUN apt-get -y update \
 && apt-get -y upgrade

# Change working directory
WORKDIR /tmp

# Download, build, and install MVAPICH
RUN wget "http://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich2-${MV2_VERSION}.tar.gz" \
 && tar -xf "mvapich2-${MV2_VERSION}.tar.gz" \
 && cd "mvapich2-${MV2_VERSION}" \
 && export FFLAGS='-fallow-argument-mismatch' \
 && ./configure --prefix="${MV2_INSTALL_DIR}" --enable-cuda --with-cuda="${CUDA_HOME}" --with-cuda-include="${CUDA_HOME}/include" --with-cuda-libpath="${CUDA_HOME}/lib64" --enable-fast=all --with-hwloc=v2 \
 && make -j 4 \
 && make install

# Change working directory
WORKDIR /tmp

# Remove MVAPICH build directory and source tarball
RUN rm -rf "mvapich2-${MV2_VERSION}" \
 && rm "mvapich2-${MV2_VERSION}.tar.gz"

# Store information about the container image build system
RUN mkdir -p /opt/.nxis \
 && cd /opt/.nxis \
 && df -ahPT > df.default \
 && fdisk --list > fdisk.default \
 && lsblk --output-all > lsblk.default \
 && lsblk --output-all --json > lsblk.json \
 && lscpu --output-all > lscpu.default \
 && lscpu --output-all --json > lscpu.json \
 && lshw > lshw.default \
 && lshw -json > lshw.json \
 && lshw -short > lshw.short \
 && lspci > lspci.default \
 && lspci -vvv > lspci.verbose \
 && free -h > free.default \
 && cat /proc/meminfo > meminfo.default 

# Cleanup
RUN apt-get -y autoremove --purge \
 && apt-get -y clean \
 && rm -rf /var/lib/apt/lists/*

# Update database for mlocate
RUN updatedb
