Bootstrap: oras
From: ghcr.io/mkandes/ubuntu:22.04-mlnx-ofed-5.8-2.0.3.0-mvapich-2.3.7-x86_64-2024-01-29

%labels

    org.opencontainers.image.ref.name ghcr.io/mkandes/hpl:2.3-ubuntu-22.04-mlnx-ofed-5.8-2.0.3.0-mvapich-2.3.7-openblas-0.3.26-x86_64-2024-02-02

    org.opencontainers.image.base.name ghcr.io/mkandes/ubuntu:22.04-mlnx-ofed-5.8-2.0.3.0-mvapich-2.3.7-x86_64-2024-01-29
    org.opencontainers.image.base.digest sha256:c66b88b767a49037f8ec2eace7508929ce4ceff1b53e8a8aef5ede75a0c189b9 

    org.opencontainers.image.title hpl
    org.opencontainers.image.description A Portable Implementation of the High-Performance Linpack (HPL) Benchmark for Distributed-Memory Computers
    org.opencontainers.image.url https://www.netlib.org/benchmark/hpl/
    org.opencontainers.image.documentation https://www.netlib.org/benchmark/hpl/documentation.html
    org.opencontainers.image.source https://www.netlib.org/benchmark/hpl/hpl-2.3.tar.gz
    org.opencontainers.image.vendor Innovative Computing Laboratory, University of Tennessee (https://icl.utk.edu)
    org.opencontainers.image.licenses https://www.netlib.org/benchmark/hpl/copyright.html
    org.opencontainers.image.version 2.3
    org.opencontainers.image.revision

    org.opencontainers.image.authors Marty Kandes (mkandes@sdsc.edu)

%setup

%environment

    # Set OpenBLAS version number, target architecture, maximum number
    # of threads, root and installation directories
    export OPENBLAS_REPO_URL='https://github.com/xianyi/OpenBLAS.git'
    export OPENBLAS_VERSION='0.3.26'
    export OPENBLAS_USE_OPENMP=1
    export OPENBLAS_DYNAMIC_ARCH=1
    export OPENBLAS_TARGET_ARCH='HASWELL'
    export OPENBLAS_MAX_NUM_THREADS=256
    export OPENBLAS_ROOT_DIR='/opt/openblas'
    export OPENBLAS_INSTALL_DIR="${OPENBLAS_ROOT_DIR}/${OPENBLAS_VERSION}"

    # Set path to OpenBLAS libraries
    export LD_LIBRARY_PATH="${OPENBLAS_INSTALL_DIR}/lib:${LD_LIBRARY_PATH}"

    # Set HPL version number, target architecture, root and installation
    # directories
    export HPL_ROOT_URL='http://www.netlib.org/benchmark/hpl'
    export HPL_VERSION='2.3'
    export HPL_ARCH='linux64'
    export HPL_ROOT_DIR='/opt/hpl'
    export HPL_INSTALL_DIR="${HPL_ROOT_DIR}/${HPL_VERSION}"

    # Set path to HPL binary
    export PATH="${HPL_INSTALL_DIR}/bin:${PATH}"

%post -c /bin/bash

    # Set operating system mirror URL
    export MIRRORURL='http://us.archive.ubuntu.com/ubuntu'

    # Set operating system version
    export OSVERSION='jammy'

    # Set system locale
    export LC_ALL=C

    # Set debian frontend interface
    export DEBIAN_FRONTEND='noninteractive'

    # Upgrade all software packages to their latest versions
    apt-get -y update && apt-get -y upgrade

    # Set OpenBLAS version number, target architecture, maximum number
    # of threads, root and installation directories
    export OPENBLAS_REPO_URL='https://github.com/xianyi/OpenBLAS.git'
    export OPENBLAS_VERSION='0.3.26'
    export OPENBLAS_USE_OPENMP=1
    export OPENBLAS_DYNAMIC_ARCH=1
    export OPENBLAS_TARGET_ARCH='HASWELL'
    export OPENBLAS_MAX_NUM_THREADS=256
    export OPENBLAS_ROOT_DIR='/opt/openblas'
    export OPENBLAS_INSTALL_DIR="${OPENBLAS_ROOT_DIR}/${OPENBLAS_VERSION}"

    cd /tmp

    # Download, build, and install OpenBLAS
    git clone "${OPENBLAS_REPO_URL}"
    cd OpenBLAS
    git checkout "v${OPENBLAS_VERSION}"
    if (( "${OPENBLAS_DYNAMIC_ARCH}" == 1 )); then
      make FC='gfortran' BINARY=64 USE_OPENMP="${OPENBLAS_USE_OPENMP}" DYNAMIC_ARCH=1 NUM_THREADS="${OPENBLAS_MAX_NUM_THREADS}"
    else
      make FC='gfortran' BINARY=64 USE_OPENMP="${OPENBLAS_USE_OPENMP}" TARGET="${OPENBLAS_TARGET_ARCH}" NUM_THREADS="${OPENBLAS_MAX_NUM_THREADS}"
    fi
    make PREFIX="${OPENBLAS_INSTALL_DIR}" install

    # Set path to OpenBLAS libraries
    export LD_LIBRARY_PATH="${OPENBLAS_INSTALL_DIR}/lib:${LD_LIBRARY_PATH}"

    cd /tmp

    # Remove OpenBLAS build directory
    #rm -rf OpenBLAS

    # Set HPL version number, target architecture, root and installation
    # directories
    export HPL_ROOT_URL='http://www.netlib.org/benchmark/hpl'
    export HPL_VERSION='2.3'
    export HPL_ARCH='linux64'
    export HPL_ROOT_DIR='/opt/hpl'
    export HPL_INSTALL_DIR="${HPL_ROOT_DIR}/${HPL_VERSION}"

    cd /tmp

    # Download, build, and install HPL
    wget "${HPL_ROOT_URL}/hpl-${HPL_VERSION}.tar.gz"
    tar -xf "hpl-${HPL_VERSION}.tar.gz"
    cd "hpl-${HPL_VERSION}/setup"
    source make_generic
    mv Make.UNKNOWN Make.linux64
    sed -i 's/ARCH         = UNKNOWN/ARCH         = linux64/' Make.linux64
    sed -i 's/TOPdir       = $(HOME)\/hpl/TOPdir       =/' Make.linux64
    sed -i "s/TOPdir       =/TOPdir       = \/opt\/hpl\/${HPL_VERSION}/" Make.linux64
    sed -i 's/MPdir        = /MPdir        = \/opt\/mvapich\/2.3.7/' Make.linux64
    sed -i 's/MPinc        = /MPinc        = -I$(MPdir)\/include/' Make.linux64
    sed -i 's/MPlib        = /MPlib        = $(MPdir)\/lib\/libmpi.so/' Make.linux64
    sed -i "s/LAdir        = /LAdir        = \/opt\/openblas\/${OPENBLAS_VERSION}/" Make.linux64
    sed -i 's/LAinc        = /LAinc        = -I$(LAdir)\/include/' Make.linux64
    sed -i 's/LAlib        = -lblas/LAlib        = $(LAdir)\/lib\/libopenblas.a/' Make.linux64
    sed -i 's/LINKER       = mpif77/LINKER       = mpicc/' Make.linux64
    cp Make.linux64 ../
    cd ../
    export LDFLAGS="-L${OPENBLAS_INSTALL_DIR}/lib"
    ./configure --prefix="${HPL_INSTALL_DIR}"
    make arch='linux64'
    make install

    cd /tmp

    # Remove HPL build directory and source tarball
    #rm -rf "hpl-${HPL_VERSION}"
    #rm "hpl-${HPL_VERSION}.tar.gz"

    # Store information about the CPU arch of the build system
    lscpu > /.singularity.d/lscpu.txt

    # Cleanup
    apt-get -y autoremove --purge
    apt-get -y clean

    # Update database for mlocate
    updatedb

%files

%runscript

%test
