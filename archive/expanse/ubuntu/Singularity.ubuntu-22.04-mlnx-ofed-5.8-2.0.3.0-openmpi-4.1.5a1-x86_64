Bootstrap: oras
From: ghcr.io/mkandes/ubuntu:22.04-x86_64-2024-01-27

%labels

    org.opencontainers.image.ref.name ghcr.io/mkandes/ubuntu:22.04-mlnx-ofed-5.8-2.0.3.0-openmpi-4.1.5a1-x86_64-2024-01-27

    org.opencontainers.image.base.name ghcr.io/mkandes/ubuntu:22.04-x86_64-2024-01-27
    org.opencontainers.image.base.digest sha256:8e42778c7cd0631b5567db203ebaddaa850a7c61f8c8cffadaec7bbaa6ac2c48

    org.opencontainers.image.title openmpi
    org.opencontainers.image.description Open MPI is an open source Message Passing Interface (MPI) implementation
    org.opencontainers.image.url https://www.open-mpi.org
    org.opencontainers.image.documentation https://www-lb.open-mpi.org/doc/v4.1
    org.opencontainers.image.source http://www.mellanox.com/downloads/ofed/MLNX_OFED-5.8-2.0.3.0/MLNX_OFED_LINUX-5.8-2.0.3.0-ubuntu22.04-x86_64.tgz
    org.opencontainers.image.vendor The Open MPI Project
    org.opencontainers.image.licenses BSD-3-Clause-Open-MPI
    org.opencontainers.image.version 4.1.5a1
    org.opencontainers.image.revision 1.58101

    org.opencontainers.image.authors Marty Kandes (mkandes@sdsc.edu)

%setup

%environment

    # Set Mellanox OFED version, operating system, and hardware platform
    export MLNX_ROOT_URL='http://www.mellanox.com/downloads/ofed'
    export MLNX_OFED_VERSION='5.8-2.0.3.0'
    export MLNX_OS_VERSION='ubuntu22.04'
    export MLNX_PLATFORM='x86_64'

    # Set OpenMPI major, minor, and revision numbers, root and
    # installation directories
    export OMPI_MAJOR='4'
    export OMPI_MINOR='1'
    export OMPI_REVISION='5a1'
    export OMPI_VERSION="${OMPI_MAJOR}.${OMPI_MINOR}.${OMPI_REVISION}"
    export OMPI_ROOT_DIR='/usr/mpi/gcc'
    export OMPI_INSTALL_DIR="${OMPI_ROOT_DIR}/openmpi-${OMPI_VERSION}"

    # Set paths to OpenMPI binaries and libraries
    export MPI_HOME="${OMPI_INSTALL_DIR}"
    export PATH="${MPI_HOME}/bin:${PATH}"
    export LD_LIBRARY_PATH="${MPI_HOME}/lib:${LD_LIBRARY_PATH}"

%post -c /bin/bash

    # Set operating system mirror URL
    export MIRRORURL='http://us.archive.ubuntu.com/ubuntu'

    # Set operating system version
    export OSVERSION='jammy'

    # Set system locale
    export LC_ALL=C

    # Set debian frontend interface
    export DEBIAN_FRONTEND='noninteractive'

    # Upgrade all software packages to their latest versions
    apt-get -y update && apt-get -y upgrade

    # Set Mellanox OFED version, operating system, and hardware platform
    export MLNX_ROOT_URL='http://www.mellanox.com/downloads/ofed'
    export MLNX_OFED_VERSION='5.8-2.0.3.0'
    export MLNX_OS_VERSION='ubuntu22.04'
    export MLNX_PLATFORM='x86_64'

    cd /tmp

    # Download and install Mellanox OFED drivers and supporting
    # libraries for user space access to Ethernet, RDMA, and Infiniband.
    # https://docs.mellanox.com/pages/releaseview.action?pageId=15049785
    wget "${MLNX_ROOT_URL}/MLNX_OFED-${MLNX_OFED_VERSION}/MLNX_OFED_LINUX-${MLNX_OFED_VERSION}-${MLNX_OS_VERSION}-${MLNX_PLATFORM}.tgz"
    tar -xf "MLNX_OFED_LINUX-${MLNX_OFED_VERSION}-${MLNX_OS_VERSION}-${MLNX_PLATFORM}.tgz"
    cd "MLNX_OFED_LINUX-${MLNX_OFED_VERSION}-${MLNX_OS_VERSION}-${MLNX_PLATFORM}"
    ./mlnxofedinstall --user-space-only --without-fw-update --force

    cd /tmp

    # Remove Mellanox OFED archive directory and tarball
    rm -rf "MLNX_OFED_LINUX-${MLNX_OFED_VERSION}-${MLNX_OS_VERSION}-${MLNX_PLATFORM}"
    rm "MLNX_OFED_LINUX-${MLNX_OFED_VERSION}-${MLNX_OS_VERSION}-${MLNX_PLATFORM}.tgz"

    # Install additional tools
    apt-get -y install numactl
    apt-get -y install libnuma-dev

    # Store information about the CPU arch of the build system
    lscpu > /.singularity.d/lscpu.txt

    # Cleanup
    apt-get -y autoremove --purge
    apt-get -y clean

    # Update database for mlocate
    updatedb

%files

%runscript

%test
