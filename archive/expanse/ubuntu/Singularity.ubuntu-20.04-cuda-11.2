Bootstrap: oras
From: ghcr.io/mkandes/naked-singularity:ubuntu-20.04

%labels

    APPLICATION_NAME ubuntu + cuda
    APPLICATION_VERSION 20.04 + 11.2
    APPLICATION_URL https://docs.nvidia.com/cuda

    IMAGE_URI oras://ghcr.io/mkandes/naked-singularity:ubuntu-20.04-cuda-11.2
    IMAGE_MD5 0f7f308c2b10937e54660298f4444b02
    IMAGE_SHA256 dda42622aa0fd60e074496dde9ce5bfe8cefee9ff493f4157fdb90768bdff44e

    AUTHOR_NAME Marty Kandes
    AUTHOR_EMAIL mkandes@sdsc.edu

    LAST_UPDATED 20220513

%setup

%environment

    # Set NVIDIA driver and CUDA versions
    export NVIDIA_DRIVER_MAJOR='510'
    export NVIDIA_DRIVER_MINOR='39'
    export NVIDIA_DRIVER_REVISION='01'
    export NVIDIA_DRIVER_VERSION="${NVIDIA_DRIVER_MAJOR}.${NVIDIA_DRIVER_MINOR}.${NVIDIA_DRIVER_REVISION}"

    export CUDA_MAJOR='11'
    export CUDA_MINOR='2'
    export CUDA_REVISION='2'
    export CUDA_VERSION="${CUDA_MAJOR}.${CUDA_MINOR}.${CUDA_REVISION}"

    export CUDNN_MAJOR='8'
    export CUDNN_MINOR='1'
    export CUDNN_REVISION='1.33'
    export CUDNN_VERSION="${CUDNN_MAJOR}.${CUDNN_MINOR}.${CUDNN_REVISION}"

    export NCCL_MAJOR='2'
    export NCCL_MINOR='8'
    export NCCL_REVISION='4'
    export NCCL_VERSION="${NCCL_MAJOR}.${NCCL_MINOR}.${NCCL_REVISION}"

    export TENSORRT_MAJOR=''
    export TENSORRT_MINOR=''
    export TENSORRT_REVISION=''
    export TENSORRT_VERSION="${TENSORRT_MAJOR}.${TENSORRT_MINOR}.${TENSORRT_REVISION}"

    export CUTENSOR_MAJOR='1'
    export CUTENSOR_MINOR='3'
    export CUTENSOR_REVISION='3.2'
    export CUTENSOR_VERSION="${CUTENSOR_MAJOR}.${CUTENSOR_MINOR}.${CUTENSOR_REVISION}"

    # Set paths to CUDA binaries and libraries
    export CUDA_HOME="/usr/local/cuda-${CUDA_MAJOR}.${CUDA_MINOR}"

    export CUDNN_INCLUDE='/usr/include'
    export CUDNN_LIB='/usr/lib/x86_64-linux-gnu'

    export NCCL_INCLUDE='/usr/include'
    export NCCL_LIB='/usr/lib/x86_64-linux-gnu'

    export TENSORRT_INCLUDE='/usr/include'
    export TENSORRT_LIB='/usr/lib/x86_64-linux-gnu'

    export CUTENSOR_INCLUDE='/usr/include'
    export CUTENSOR_LIB='/usr/lib/x86_64-linux-gnu'

    export PATH="${CUDA_HOME}/bin${PATH:+:${PATH}}"
    export LD_LIBRARY_PATH="${CUDA_HOME}/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"
    export LD_LIBRARY_PATH="${CUDNN_LIB}:${LD_LIBRARY_PATH}"
    export LD_LIBRARY_PATH="${NCCL_LIB}:${LD_LIBRARY_PATH}"
    export LD_LIBRARY_PATH="${TENSORRT_LIB}:${LD_LIBRARY_PATH}"
    export LD_LIBRARY_PATH="${CUTENSOR_LIB}:${LD_LIBRARY_PATH}"

%post -c /bin/bash

    # Set operating system mirror URL
    export MIRRORURL='http://us.archive.ubuntu.com/ubuntu'

    # Set operating system version
    export OSVERSION='focal'

    # Set system locale
    export LC_ALL='C'

    # Set debian frontend interface
    export DEBIAN_FRONTEND='noninteractive'

    # Upgrade all software packages to their latest versions
    apt-get -y update && apt-get -y upgrade

    # Location of NVIDIA/CUDA repositories
    export CUDA_ROOT_URL='http://developer.download.nvidia.com/compute'
    export CUDA_DISTRO='ubuntu2004'
    export CUDA_ARCH='x86_64'
    export CUDA_REPO_URL="${CUDA_ROOT_URL}/cuda/repos/${CUDA_DISTRO}/${CUDA_ARCH}"
    export CUDA_GPG_PUBKEY='3bf863cc.pub'

    # Set NVIDIA driver and CUDA versions
    export NVIDIA_DRIVER_MAJOR='510'
    export NVIDIA_DRIVER_MINOR='39'
    export NVIDIA_DRIVER_REVISION='01'
    export NVIDIA_DRIVER_VERSION="${NVIDIA_DRIVER_MAJOR}.${NVIDIA_DRIVER_MINOR}.${NVIDIA_DRIVER_REVISION}"

    export CUDA_MAJOR='11'
    export CUDA_MINOR='2'
    export CUDA_REVISION='2'
    export CUDA_VERSION="${CUDA_MAJOR}.${CUDA_MINOR}.${CUDA_REVISION}"

    export CUDNN_MAJOR='8'
    export CUDNN_MINOR='1'
    export CUDNN_REVISION='1.33'
    export CUDNN_VERSION="${CUDNN_MAJOR}.${CUDNN_MINOR}.${CUDNN_REVISION}"

    export NCCL_MAJOR='2'
    export NCCL_MINOR='8'
    export NCCL_REVISION='4'
    export NCCL_VERSION="${NCCL_MAJOR}.${NCCL_MINOR}.${NCCL_REVISION}"

    export TENSORRT_MAJOR=''
    export TENSORRT_MINOR=''
    export TENSORRT_REVISION=''
    export TENSORRT_VERSION="${TENSORRT_MAJOR}.${TENSORRT_MINOR}.${TENSORRT_REVISION}"

    export CUTENSOR_MAJOR='1'
    export CUTENSOR_MINOR='3'
    export CUTENSOR_REVISION='3.2'
    export CUTENSOR_VERSION="${CUTENSOR_MAJOR}.${CUTENSOR_MINOR}.${CUTENSOR_REVISION}"

    cd /tmp

    # Install kernel headers and development packages
    # https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#verify-kernel-packages
    apt-get -y install "linux-headers-$(uname -r)"

    # Install pin file to prioritize CUDA repo 
    # https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#ubuntu-installation
    wget "${CUDA_REPO_URL}/cuda-${CUDA_DISTRO}.pin"
    mv "cuda-${CUDA_DISTRO}.pin" /etc/apt/preferences.d/cuda-repository-pin-600

    # Install public GPG key for CUDA repo
    apt-key adv --fetch-keys "${CUDA_REPO_URL}/${CUDA_GPG_PUBKEY}"

    # Add CUDA repo
    add-apt-repository -y "deb ${CUDA_REPO_URL} /"

    # Update the apt repository cache
    apt-get update

    # Install NVIDIA package dependencies
    apt-get -y install dkms
    apt-get -y install x11-common
    apt-get -y install xserver-xorg-core
    apt-get -y install xserver-xorg-legacy
    apt-get -y install libgl1
    apt-get -y install libegl1
    apt-get -y install libopengl0
    apt-get -y install libgles2
    apt-get -y install screen-resolution-extra 
    apt-get -y install libvdpau1
    apt-get -y install libjansson4 

    # Download and unpackage NVIDIA drivers and libraries manually; 
    # unfortunately, all packages are installed here manually because 
    # the current versions of the NVIDIA driver meta-package does not 
    # allow you to explicitly set the NVIDIA_DRIVER_MINOR and 
    # NVIDIA_DRIVER_REVISION versions.
    # https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#package-manager-metas
    wget --wait=5 "${CUDA_REPO_URL}/libnvidia-common-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_all.deb"
    dpkg -i "libnvidia-common-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_all.deb"
    rm "libnvidia-common-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_all.deb"

    wget --wait=5 "${CUDA_REPO_URL}/libnvidia-compute-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "libnvidia-compute-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "libnvidia-compute-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/libnvidia-cfg1-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "libnvidia-cfg1-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "libnvidia-cfg1-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/libnvidia-decode-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "libnvidia-decode-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "libnvidia-decode-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/libnvidia-encode-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "libnvidia-encode-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "libnvidia-encode-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/libnvidia-fbc1-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "libnvidia-fbc1-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "libnvidia-fbc1-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/libnvidia-gl-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "libnvidia-gl-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "libnvidia-gl-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/libnvidia-ifr1-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "libnvidia-ifr1-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "libnvidia-ifr1-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/libxnvctrl0_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "libxnvctrl0_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "libxnvctrl0_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/libxnvctrl-dev_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "libxnvctrl-dev_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "libxnvctrl-dev_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/libnvidia-extra-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "libnvidia-extra-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "libnvidia-extra-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/libnvidia-nscq-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-1_amd64.deb"
    dpkg -i "libnvidia-nscq-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-1_amd64.deb"
    rm "libnvidia-nscq-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/nvidia-kernel-source-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "nvidia-kernel-source-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "nvidia-kernel-source-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/nvidia-kernel-common-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "nvidia-kernel-common-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "nvidia-kernel-common-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/nvidia-dkms-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "nvidia-dkms-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "nvidia-dkms-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/nvidia-compute-utils-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "nvidia-compute-utils-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "nvidia-compute-utils-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/nvidia-utils-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "nvidia-utils-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "nvidia-utils-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/xserver-xorg-video-nvidia-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "xserver-xorg-video-nvidia-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "xserver-xorg-video-nvidia-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/nvidia-driver-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "nvidia-driver-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "nvidia-driver-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/nvidia-modprobe_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "nvidia-modprobe_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "nvidia-modprobe_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/nvidia-settings_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "nvidia-settings_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "nvidia-settings_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/nvidia-headless-no-dkms-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "nvidia-headless-no-dkms-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "nvidia-headless-no-dkms-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/nvidia-headless-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    dpkg -i "nvidia-headless-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"
    rm "nvidia-headless-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-0ubuntu1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/cuda-drivers-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-1_amd64.deb"
    dpkg -i "cuda-drivers-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-1_amd64.deb"
    rm "cuda-drivers-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/nvidia-fabricmanager-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-1_amd64.deb"
    dpkg -i "nvidia-fabricmanager-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-1_amd64.deb"
    rm "nvidia-fabricmanager-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/cuda-drivers-fabricmanager-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-1_amd64.deb"
    dpkg -i "cuda-drivers-fabricmanager-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-1_amd64.deb"
    rm "cuda-drivers-fabricmanager-${NVIDIA_DRIVER_MAJOR}_${NVIDIA_DRIVER_VERSION}-1_amd64.deb"

    wget --wait=5 "${CUDA_REPO_URL}/cuda-compat-${CUDA_MAJOR}-${CUDA_MINOR}_${NVIDIA_DRIVER_VERSION}-1_amd64.deb"
    dpkg -i "cuda-compat-${CUDA_MAJOR}-${CUDA_MINOR}_${NVIDIA_DRIVER_VERSION}-1_amd64.deb"
    rm "cuda-compat-${CUDA_MAJOR}-${CUDA_MINOR}_${NVIDIA_DRIVER_VERSION}-1_amd64.deb"

    # Install CUDA toolkit meta-package
    apt-get -y install "cuda-toolkit-${CUDA_MAJOR}-${CUDA_MINOR}=${CUDA_VERSION}-1"

     # Install the cuDNN library
    apt-get -y install "libcudnn${CUDNN_MAJOR}=${CUDNN_VERSION}-1+cuda${CUDA_MAJOR}.${CUDA_MINOR}"
    apt-get -y install "libcudnn${CUDNN_MAJOR}-dev=${CUDNN_VERSION}-1+cuda${CUDA_MAJOR}.${CUDA_MINOR}"

    # Install NCCL
    apt-get -y install "libnccl${NCCL_MAJOR}=${NCCL_VERSION}-1+cuda${CUDA_MAJOR}.${CUDA_MINOR}"
    apt-get -y install "libnccl-dev=${NCCL_VERSION}-1+cuda${CUDA_MAJOR}.${CUDA_MINOR}"

    # Install TensorRT
    apt-get -y install "libnvinfer${TENSORRT_MAJOR}=${TENSORRT_VERSION}-1+cuda${CUDA_MAJOR}.${CUDA_MINOR}"
    apt-get -y install "libnvinfer-dev=${TENSORRT_VERSION}-1+cuda${CUDA_MAJOR}.${CUDA_MINOR}"
    apt-get -y install "libnvinfer-plugin${TENSORRT_MAJOR}=${TENSORRT_VERSION}-1+cuda${CUDA_MAJOR}.${CUDA_MINOR}"
    apt-get -y install "libnvinfer-plugin-dev=${TENSORRT_VERSION}-1+cuda${CUDA_MAJOR}.${CUDA_MINOR}"
    apt-get -y install "libnvonnxparsers${TENSORRT_MAJOR}=${TENSORRT_VERSION}-1+cuda${CUDA_MAJOR}.${CUDA_MINOR}"
    apt-get -y install "libnvonnxparsers-dev=${TENSORRT_VERSION}-1+cuda${CUDA_MAJOR}.${CUDA_MINOR}"
    apt-get -y install "libnvparsers${TENSORRT_MAJOR}=${TENSORRT_VERSION}-1+cuda${CUDA_MAJOR}.${CUDA_MINOR}"
    apt-get -y install "libnvparsers-dev=${TENSORRT_VERSION}-1+cuda${CUDA_MAJOR}.${CUDA_MINOR}"
    apt-get -y install "python3-libnvinfer=${TENSORRT_VERSION}-1+cuda${CUDA_MAJOR}.${CUDA_MINOR}"
    apt-get -y install "python3-libnvinfer-dev=${TENSORRT_VERSION}-1+cuda${CUDA_MAJOR}.${CUDA_MINOR}"

    # Install cuTensor - https://developer.nvidia.com/cutensor
    apt-get -y install "libcutensor1=${CUTENSOR_VERSION}-1"
    apt-get -y install "libcutensor-dev=${CUTENSOR_VERSION}-1"

    # Install AmgX - https://github.com/NVIDIA/AMGX ?

    # Install cuQuantum - https://docs.nvidia.com/cuda/cuquantum ?
    #apt-get -y install cuquantum
    #apt-get -y install cuquantum-dev

    # Install third-party libraries required for CUDA samples
    # https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#install-libraries
    apt-get -y install g++
    apt-get -y install freeglut3-dev
    apt-get -y install build-essential
    apt-get -y install libx11-dev
    apt-get -y install libxmu-dev
    apt-get -y install libxi-dev
    apt-get -y install libglu1-mesa
    apt-get -y install libglu1-mesa-dev

    # Cleanup
    apt-get -y autoremove --purge
    apt-get -y clean

    # Update database for mlocate
    updatedb

%files

%runscript

%test
