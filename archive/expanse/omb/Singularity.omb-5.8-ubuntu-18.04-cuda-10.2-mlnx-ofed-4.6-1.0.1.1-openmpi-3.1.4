Bootstrap: oras
From: ghcr.io/mkandes/naked-singularity:ubuntu-18.04-cuda-10.2-mlnx-ofed-4.6-1.0.1.1-openmpi-3.1.4

%labels

    APPLICATION_NAME OSU Micro-Benchmarks
    APPLICATION_VERSION 5.8
    APPLICATION_URL http://mvapich.cse.ohio-state.edu/benchmarks

    AUTHOR_NAME Marty Kandes
    AUTHOR_EMAIL mkandes@sdsc.edu

    LAST_UPDATED 20210909

%setup

%environment

    # Set OMB major and minor version numbers, root and
    # installation directories
    export OMB_MAJOR='5'
    export OMB_MINOR='8'
    export OMB_VERSION="${OMB_MAJOR}.${OMB_MINOR}"
    export OMB_ROOT_DIR='/opt/omb'
    export OMB_INSTALL_DIR="${OMB_ROOT_DIR}/${OMB_VERSION}"

    # Set paths to OSU Microbenchmarks binaries
    export PATH="${OMB_INSTALL_DIR}/collective:${PATH}"
    export PATH="${OMB_INSTALL_DIR}/one-sided:${PATH}"
    export PATH="${OMB_INSTALL_DIR}/pt2pt:${PATH}"
    export PATH="${OMB_INSTALL_DIR}/startup:${PATH}"

%post -c /bin/bash

    # Set operating system mirror URL
    export MIRRORURL='http://us.archive.ubuntu.com/ubuntu'

    # Set operating system version
    export OSVERSION='bionic'

    # Set system locale
    export LC_ALL='C'

    # Set debian frontend interface
    export DEBIAN_FRONTEND='noninteractive'

    # Set NVIDIA CUDA version
    export CUDA_MAJOR='10'
    export CUDA_MINOR='2'
    export CUDA_VERSION="${CUDA_MAJOR}.${CUDA_MINOR}"

    # Set paths to CUDA binaries and libraries
    export CUDA_HOME="/usr/local/cuda-${CUDA_VERSION}"
    export PATH="${CUDA_HOME}/bin${PATH:+:${PATH}}"
    export LD_LIBRARY_PATH="${CUDA_HOME}/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"

    # Set OpenMPI major, minor, and revision numbers, root and
    # installation directories
    export OMPI_MAJOR='3'
    export OMPI_MINOR='1'
    export OMPI_REVISION='4'
    export OMPI_VERSION="${OMPI_MAJOR}.${OMPI_MINOR}.${OMPI_REVISION}"
    export OMPI_ROOT_DIR='/opt/openmpi'
    export OMPI_INSTALL_DIR="${OMPI_ROOT_DIR}/${OMPI_VERSION}"

    # Set paths to OpenMPI binaries and libraries
    export PATH="${OMPI_INSTALL_DIR}/bin:${PATH}"
    export LD_LIBRARY_PATH="${OMPI_INSTALL_DIR}/lib:${LD_LIBRARY_PATH}"

    # Upgrade all software packages to their latest versions
    apt-get -y update && apt-get -y upgrade

    cd /tmp

    # Set OMB major and minor version numbers, root and
    # installation directories
    export OMB_ROOT_URL='http://mvapich.cse.ohio-state.edu/download/mvapich'
    export OMB_MAJOR='5'
    export OMB_MINOR='8'
    export OMB_VERSION="${OMB_MAJOR}.${OMB_MINOR}"
    export OMB_ROOT_DIR='/opt/omb'
    export OMB_INSTALL_DIR="${OMB_ROOT_DIR}/${OMB_VERSION}"

    # Download, build, and install OSU Microbenchmarks
    wget "${OMB_ROOT_URL}/osu-micro-benchmarks-${OMB_VERSION}.tgz"
    tar -xf "osu-micro-benchmarks-${OMB_VERSION}.tgz"
    cd "osu-micro-benchmarks-${OMB_VERSION}"
    ./configure --prefix="${OMB_INSTALL_DIR}" CC='mpicc' CXX='mpicxx' --enable-cuda --with-cuda-include="${CUDA_HOME}/include" --with-cuda-libpath="${CUDA_HOME}/lib64"
    make
    make install

    # Reorganize OSU Microbenchmarks directory structure
    cd "${OMB_INSTALL_DIR}"
    mv libexec/osu-micro-benchmarks/mpi/collective ./
    mv libexec/osu-micro-benchmarks/mpi/one-sided ./
    mv libexec/osu-micro-benchmarks/mpi/pt2pt ./
    mv libexec/osu-micro-benchmarks/mpi/startup ./
    rm -rf libexec

    cd /tmp

    # Remove OMB build directory and source tarball
    rm -rf "osu-micro-benchmarks-${OMB_VERSION}"
    rm "osu-micro-benchmarks-${OMB_VERSION}.tgz"

    # Cleanup
    apt-get -y autoremove --purge
    apt-get -y clean

    # Update database for mlocate
    updatedb

%files

%runscript

%test
